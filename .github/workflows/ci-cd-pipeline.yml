name: CI/CD Pipeline

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Clonar el repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      # Paso 2: Instalar dependencias mínimas necesarias
      - name: Install dependencies
        run: |
          composer install --no-dev       # Instalar solo dependencias PHP de producción
          npm install --production        # Instalar solo dependencias de producción de JavaScript

      # Paso 3: Ejecutar pruebas automatizadas
      - name: Run Tests
        run: |
          phpunit --configuration phpunit.xml    # Ejecuta pruebas PHP
          npm test                               # Ejecuta pruebas de frontend si están definidas

      # Paso 4: Verificar estándares de código y escaneo de seguridad
      - name: Run Linter
        run: |
          phpcs --standard=PSR12 src             # Linter para PHP según PSR12
          npm run lint                           # Linter para JS/TS, si es necesario


  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Production
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.PROD_HOST }}
          USER: ${{ secrets.PROD_USER }}
        run: |
          ssh -i "${SSH_PRIVATE_KEY}" "${USER}@${HOST}" << 'EOF'
            cd /$user/docker-lamp
            git pull origin main
            composer install --no-dev
            npm install --production
            php artisan migrate --force
            php artisan cache:clear
          EOF
